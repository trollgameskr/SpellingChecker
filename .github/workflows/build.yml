name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: dotnet restore SpellingChecker.sln
    
    - name: Build
      run: dotnet build SpellingChecker.sln --configuration Release --no-restore
    
    - name: Publish Application
      run: dotnet publish SpellingChecker/SpellingChecker.csproj -c Release -r win-x64 --self-contained -p:PublishSingleFile=true -o ./publish
    
    - name: Create Portable ZIP Distribution
      run: |
        $version = "1.0.0"
        $distPath = "dist/SpellingChecker-portable"
        New-Item -ItemType Directory -Force -Path $distPath | Out-Null
        Copy-Item "./publish/SpellingChecker.exe" -Destination $distPath
        Copy-Item "README.md" -Destination $distPath
        Copy-Item "LICENSE" -Destination $distPath
        Copy-Item "CONFIG.md" -Destination $distPath
        Copy-Item "QUICKSTART.md" -Destination $distPath
        $readmeContent = @"
        # AI Spelling Checker - Portable Version
        
        ## Quick Start
        1. Run SpellingChecker.exe
        2. Configure your OpenAI API key in Settings
        3. Use hotkeys: Ctrl+Shift+Alt+Y (spell check) or Ctrl+Shift+Alt+T (translate)
        
        See README.md for full documentation.
        "@
        $readmeContent | Out-File -FilePath "$distPath/PORTABLE-README.txt" -Encoding UTF8
        Compress-Archive -Path $distPath -DestinationPath "SpellingChecker-v$version-portable-win-x64.zip" -CompressionLevel Optimal
      shell: pwsh
    
    - name: Upload Standalone Executable
      uses: actions/upload-artifact@v4
      with:
        name: SpellingChecker-Standalone-win-x64
        path: ./publish/SpellingChecker.exe
    
    - name: Upload Portable ZIP
      uses: actions/upload-artifact@v4
      with:
        name: SpellingChecker-Portable-win-x64
        path: SpellingChecker-v*-portable-win-x64.zip
    
    # Optional: Build MSI installer if WiX is available
    - name: Setup WiX Toolset
      if: github.event_name == 'release'
      run: |
        choco install wixtoolset -y
      continue-on-error: true
    
    - name: Build MSI Installer
      if: github.event_name == 'release'
      run: |
        if (Test-Path "$env:WIX\bin\candle.exe") {
          Write-Host "Building MSI installer..."
          & "$env:WIX\bin\candle.exe" -arch x64 -out obj/Product.wixobj Product.wxs -ext WixUIExtension -ext WixUtilExtension
          New-Item -ItemType Directory -Force -Path installer | Out-Null
          & "$env:WIX\bin\light.exe" -out installer/SpellingCheckerSetup.msi obj/Product.wixobj -ext WixUIExtension -ext WixUtilExtension -cultures:en-us
        } else {
          Write-Host "WiX not available, skipping MSI build"
        }
      shell: pwsh
      continue-on-error: true
    
    - name: Upload MSI Installer
      if: github.event_name == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: SpellingChecker-MSI-Installer
        path: installer/*.msi
      continue-on-error: true
